{"ast":null,"code":"var _jsxFileName = \"/Users/kylemucerino/Desktop/lakersoffseason/client/src/components/ThoughtForm/index.js\";\nimport React, { useState, useRef } from \"react\";\nconst ThoughtForm = () => {\n  const fileInput = useRef(null);\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\"\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  // update state based on form input changes\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setFormState({\n        ...formState,\n        [event.target.name]: event.target.value\n      });\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const postData = async () => {\n      const res = await fetch(\"/api/users\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formState)\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n    postData();\n\n    // clear form value\n    setFormState({\n      username: \"\",\n      thought: \"\"\n    });\n    setCharacterCount(0);\n  };\n  const handleImageUpload = event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"image\", fileInput.current.files[0]);\n    const postImage = async () => {\n      try {\n        const res = await fetch(\"/api/image-upload\", {\n          mode: \"cors\",\n          method: \"POST\",\n          body: data\n        });\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setFormState({\n          ...formState,\n          image: postResponse.Location\n        });\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    postImage();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Character Count: \", characterCount, \"/280\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"flex-row justify-center justify-space-between-md align-stretch\",\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Name\",\n    name: \"username\",\n    value: formState.username,\n    className: \"form-input col-12 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Here's a new thought...\",\n    name: \"thought\",\n    value: formState.thought,\n    className: \"form-input col-12 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-input col-12  p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Add an image to your thought:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: fileInput,\n    className: \"form-input p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleImageUpload,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn col-12 \",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\nexport default ThoughtForm;\nfdb927;","map":{"version":3,"names":["React","useState","useRef","ThoughtForm","fileInput","formState","setFormState","username","thought","characterCount","setCharacterCount","handleChange","event","target","value","length","name","handleFormSubmit","preventDefault","postData","res","fetch","method","headers","Accept","body","JSON","stringify","data","json","console","log","handleImageUpload","FormData","append","current","files","postImage","mode","ok","Error","statusText","postResponse","image","Location","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","placeholder","onChange","type","ref","onClick","fdb927"],"sources":["/Users/kylemucerino/Desktop/lakersoffseason/client/src/components/ThoughtForm/index.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nconst ThoughtForm = () => {\n  const fileInput = useRef(null);\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\"\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState, [event.target.name]: event.target.value });\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const postData = async () => {\n      const res = await fetch(\"/api/users\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formState)\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n    postData();\n\n    // clear form value\n    setFormState({ username: \"\", thought: \"\" });\n    setCharacterCount(0);\n  };\n\n  const handleImageUpload = (event) => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"image\", fileInput.current.files[0]);\n\n    const postImage = async () => {\n      try {\n        const res = await fetch(\"/api/image-upload\", {\n          mode: \"cors\",\n          method: \"POST\",\n          body: data\n        });\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setFormState({ ...formState, image: postResponse.Location });\n\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    postImage();\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`}>\n        Character Count: {characterCount}/280\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <input\n          placeholder=\"Name\"\n          name=\"username\"\n          value={formState.username}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></input>\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          name=\"thought\"\n          value={formState.thought}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></textarea>\n        <label className=\"form-input col-12  p-1\">\n          Add an image to your thought:\n          <input type=\"file\" ref={fileInput} className=\"form-input p-2\" />\n          <button className=\"btn\" onClick={handleImageUpload} type=\"submit\">\n            Upload\n          </button>\n        </label>\n        <button className=\"btn col-12 \" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\nfdb927"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,SAAS,GAAGF,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC;IACzCM,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,IAAI,GAAG,EAAE;MACpCT,YAAY,CAAC;QAAE,GAAGD,SAAS;QAAE,CAACO,KAAK,CAACC,MAAM,CAACG,IAAI,GAAGJ,KAAK,CAACC,MAAM,CAACC;MAAM,CAAC,CAAC;MACvEJ,iBAAiB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAIL,KAAK,IAAK;IAClCA,KAAK,CAACM,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,SAAS;MAChC,CAAC,CAAC;MACF,MAAMuB,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC;IACDT,QAAQ,CAAC,CAAC;;IAEV;IACAb,YAAY,CAAC;MAAEC,QAAQ,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IAC3CE,iBAAiB,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMsB,iBAAiB,GAAIpB,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtB,MAAMU,IAAI,GAAG,IAAIK,QAAQ,CAAC,CAAC;IAC3BL,IAAI,CAACM,MAAM,CAAC,OAAO,EAAE9B,SAAS,CAAC+B,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEhD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;UAC3CiB,IAAI,EAAE,MAAM;UACZhB,MAAM,EAAE,MAAM;UACdG,IAAI,EAAEG;QACR,CAAC,CAAC;QACF,IAAI,CAACR,GAAG,CAACmB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACpB,GAAG,CAACqB,UAAU,CAAC;QAC5C,MAAMC,YAAY,GAAG,MAAMtB,GAAG,CAACS,IAAI,CAAC,CAAC;QACrCvB,YAAY,CAAC;UAAE,GAAGD,SAAS;UAAEsC,KAAK,EAAED,YAAY,CAACE;QAAS,CAAC,CAAC;QAE5D,OAAOF,YAAY,CAACE,QAAQ;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;MACpB;IACF,CAAC;IACDR,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACErC,KAAA,CAAA8C,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpD,KAAA,CAAA8C,aAAA;IAAGO,SAAS,EAAG,OAAM5C,cAAc,KAAK,GAAG,GAAG,YAAY,GAAG,EAAG,EAAE;IAAAsC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAChD,EAAC3C,cAAc,EAAC,MAChC,CAAC,eACJT,KAAA,CAAA8C,aAAA;IACEO,SAAS,EAAC,gEAAgE;IAC1EC,QAAQ,EAAErC,gBAAiB;IAAA8B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE3BpD,KAAA,CAAA8C,aAAA;IACES,WAAW,EAAC,MAAM;IAClBvC,IAAI,EAAC,UAAU;IACfF,KAAK,EAAET,SAAS,CAACE,QAAS;IAC1B8C,SAAS,EAAC,oBAAoB;IAC9BG,QAAQ,EAAE7C,YAAa;IAAAoC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjB,CAAC,eACTpD,KAAA,CAAA8C,aAAA;IACES,WAAW,EAAC,yBAAyB;IACrCvC,IAAI,EAAC,SAAS;IACdF,KAAK,EAAET,SAAS,CAACG,OAAQ;IACzB6C,SAAS,EAAC,oBAAoB;IAC9BG,QAAQ,EAAE7C,YAAa;IAAAoC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACd,CAAC,eACZpD,KAAA,CAAA8C,aAAA;IAAOO,SAAS,EAAC,wBAAwB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,+BAExC,eAAApD,KAAA,CAAA8C,aAAA;IAAOW,IAAI,EAAC,MAAM;IAACC,GAAG,EAAEtD,SAAU;IAACiD,SAAS,EAAC,gBAAgB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAChEpD,KAAA,CAAA8C,aAAA;IAAQO,SAAS,EAAC,KAAK;IAACM,OAAO,EAAE3B,iBAAkB;IAACyB,IAAI,EAAC,QAAQ;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAE1D,CACH,CAAC,eACRpD,KAAA,CAAA8C,aAAA;IAAQO,SAAS,EAAC,aAAa;IAACI,IAAI,EAAC,QAAQ;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAEtC,CACJ,CACH,CAAC;AAEV,CAAC;AAED,eAAejD,WAAW;AAC1ByD,MAAM"},"metadata":{},"sourceType":"module"}