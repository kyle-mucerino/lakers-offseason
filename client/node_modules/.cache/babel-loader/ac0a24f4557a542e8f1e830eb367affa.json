{"ast":null,"code":"var _jsxFileName = \"/Users/kylemucerino/Desktop/lakersoffseason/client/src/pages/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ThoughtList from \"../components/ThoughtList\";\nimport ThoughtForm from \"../components/ThoughtForm\";\nconst Home = () => {\n  const lakersFontStyle = {\n    fontFamily: \"Lakers Alt, sans-serif\"\n  };\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [thoughts, setThoughts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"/api/users\");\n        const jsonData = await res.json();\n        const _data = jsonData.sort((a, b) => a.createdAt < b.createdAt ? 1 : -1);\n        setThoughts([..._data]);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row justify-space-between\",\n    style: lakersFontStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ThoughtForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `col-12 mb-3 `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, !isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"LakeShow\") : /*#__PURE__*/React.createElement(ThoughtList, {\n    thoughts: thoughts,\n    setThoughts: setThoughts,\n    title: \"Some Feed for Thought(s)...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","ThoughtList","ThoughtForm","Home","lakersFontStyle","fontFamily","isLoaded","setIsLoaded","thoughts","setThoughts","fetchData","res","fetch","jsonData","json","_data","sort","a","b","createdAt","error","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","style","title"],"sources":["/Users/kylemucerino/Desktop/lakersoffseason/client/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ThoughtList from \"../components/ThoughtList\";\nimport ThoughtForm from \"../components/ThoughtForm\";\n\nconst Home = () => {\n  const lakersFontStyle = {\n    fontFamily: \"Lakers Alt, sans-serif\",\n  };\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [thoughts, setThoughts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"/api/users\");\n        const jsonData = await res.json();\n        const _data = jsonData.sort((a, b) =>\n          a.createdAt < b.createdAt ? 1 : -1\n        );\n        setThoughts([..._data]);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      <div className=\"flex-row justify-space-between\" style={lakersFontStyle}>\n        <div className=\"col-12 mb-3\">\n          <ThoughtForm />\n        </div>\n        <div className={`col-12 mb-3 `}>\n          {!isLoaded ? (\n            <div>LakeShow</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              setThoughts={setThoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAMC,eAAe,GAAG;IACtBC,UAAU,EAAE;EACd,CAAC;EACD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;QACrC,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QACjC,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC/BD,CAAC,CAACE,SAAS,GAAGD,CAAC,CAACC,SAAS,GAAG,CAAC,GAAG,CAAC,CACnC,CAAC;QACDV,WAAW,CAAC,CAAC,GAAGM,KAAK,CAAC,CAAC;QACvBR,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/B,KAAA,CAAAyB,aAAA;IAAKO,SAAS,EAAC,gCAAgC;IAACC,KAAK,EAAE3B,eAAgB;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrE/B,KAAA,CAAAyB,aAAA;IAAKO,SAAS,EAAC,aAAa;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1B/B,KAAA,CAAAyB,aAAA,CAACrB,WAAW;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACX,CAAC,eACN/B,KAAA,CAAAyB,aAAA;IAAKO,SAAS,EAAG,cAAc;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5B,CAACvB,QAAQ,gBACRR,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,UAAa,CAAC,gBAEnB/B,KAAA,CAAAyB,aAAA,CAACtB,WAAW;IACVO,QAAQ,EAAEA,QAAS;IACnBC,WAAW,EAAEA,WAAY;IACzBuB,KAAK,EAAC,6BAA6B;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpC,CAEA,CACF,CACD,CAAC;AAEX,CAAC;AAED,eAAe1B,IAAI"},"metadata":{},"sourceType":"module"}